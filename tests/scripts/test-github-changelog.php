<?php

declare( strict_types=1 );

use PHPUnit\Framework\TestCase;

require_once __DIR__ . '/../../lib/github-changelog.php';

define( 'PR_CHANGELOG_START_MARKER', '<h2>Changelog Description' );
define( 'PR_CHANGELOG_END_MARKER', '<h2>' );
define( 'WP_CHANGELOG_CATEGORIES', '1,2,3' );
define( 'WP_CHANGELOG_CHANNEL_IDS', '1,2,3' );
define( 'WP_CHANGELOG_TERMS', '1,2,3' );
define( 'LINK_TO_PR', false );
define( 'PROJECT_REPONAME', 'test-project' );
define( 'DEBUG', false );
define( 'ALLOWED_TAXONOMIES', array( 'tags', 'categories', 'release-channel', 'changelog_category' ) );

class GitHub_Changelog_Test extends TestCase {
	public function test_get_changelog_html(): void {
		$pr = array();

		$pr['body'] = '# Description

Changes were made

## A different section

Content here

## Changelog Description

### This is my changelog title

<!-- An HTML Comment -->

Things we did:

* Fixed a bug
* Fixed another bug

## And another section that isn\'t a changelog

Foo Bar!';

		$changelog = get_changelog_html( $pr );

		$this->assertEquals(
			'<h3>This is my changelog title</h3>
<p>Things we did:</p>
<ul>
<li>Fixed a bug</li>
<li>Fixed another bug</li>
</ul>',
			$changelog
		);
	}

	public function test_get_changelog_categories() {
		$categories = get_changelog_categories( 'foo,bar,,baz' );

		$expected = array(
			'foo',
			'bar',
			'baz',
		);

		$this->assertEquals( $expected, $categories );
	}

	public function test_build_changelog_request_body() {
		define( 'WP_CHANGELOG_STATUS', 'publish' );

		$title      = 'foo title';
		$content    = 'foo content';
		$tags       = array( 1, 2, 3 );
		$channels   = array( 1, 2, 3 );
		$categories = array( 1, 2, 3 );
		$meta       = array(
			'changelog_pr'      => 'https://github.com/test-project/test-project/pull/1',
			'changelog_version' => '1.0.0',
		);

		$body = build_changelog_request_body( $title, $content, $tags, $meta );

		$expected = array(
			'title'           => $title,
			'content'         => $content,
			'excerpt'         => $title,
			'status'          => 'publish',
			'tags'            => implode( ',', $tags ),
			'categories'      => implode( ',', $categories ),
			'release-channel' => implode( ',', $channels ),
			'meta'            => array(
				'changelog_pr'      => 'https://github.com/test-project/test-project/pull/1',
				'changelog_version' => '1.0.0',
			),
		);

		$this->assertEquals( $expected, $body );
	}

	public function test_parse_changelog_html_with_autogenerated_date_title(): void {
		$pr = array();

		$html = '<h3>Fixed</h3>
<ul>
<li>Fixed a bug</li>
<li>Fixed another bug</li>
</ul>';

		$parsed = parse_changelog_html( $html );

		$this->assertEquals( 'test-project ' . gmdate( 'o-m-d H:i' ), $parsed['title'] );
		$this->assertEquals(
			'<h3>Fixed</h3>
<ul>
<li>Fixed a bug</li>
<li>Fixed another bug</li>
</ul>',
			$parsed['content']
		);
	}

	public function test_parse_changelog_html_with_duplicate_sections() {
		$html = '<h3>Fixed</h3>
		<ul>
		<li>Fixed a bug</li>
		</ul>
		<h3>Fixed</h3>
		<ul>
		<li>Fixed another bug</li>
		</ul>';

		$parsed = parse_changelog_html( $html );

		$this->assertEquals( 'test-project ' . gmdate( 'o-m-d H:i' ), $parsed['title'] );
		$this->assertEquals(
			'<h3>Fixed</h3>
<ul>
<li>Fixed a bug</li>
<li>Fixed another bug</li>
</ul>',
			$parsed['content']
		);
	}

	/**
	 * @dataProvider changelog_html_provider
	 */
	public function test_aggregate_changelog_headings( string $input, string $expected ) {
		$this->assertEquals(
			$expected,
			aggregate_changelog_headings( $input )
		);
	}

	public function changelog_html_provider(): array {
		return array(
			'original test case'       => array(
				'<h3>Fixed</h3>
				<ul>
				<li>Fixed a bug</li>
				</ul>
				<h3>Added</h3>
				<ul>
				<li>Added a feature</li>
				<li>Added another feature</li>
				</ul>
				<h3>Fixed</h3>
				<ul>
				<li>Fixed another bug</li>
				</ul>
				<h3>Added</h3>
				<p>Added yet another feature</p>',
				'<h3>Fixed</h3>
<ul>
<li>Fixed a bug</li>
<li>Fixed another bug</li>
</ul>
<h3>Added</h3>
<ul>
<li>Added a feature</li>
<li>Added another feature</li>
<li>Added yet another feature</li>
</ul>',
			),
			'empty input'              => array(
				'',
				'',
			),
			'single heading'           => array(
				'<h3>Fixed</h3>',
				'',
			),
			'content without headings' => array(
				'<p>Some content</p>',
				'',
			),
			'content with code tags'   => array(
				'<h3>Fixed</h3>
				<ul>
				<li>Fixed a bug in <code>function()</code></li>
				</ul>
				<h3>Added</h3>
				<p>Added a <code>feature</code></p>',
				'<h3>Fixed</h3>
<ul>
<li>Fixed a bug in <code>function()</code></li>
</ul>
<h3>Added</h3>
<ul>
<li>Added a <code>feature</code></li>
</ul>',
			),
		);
	}

	public function test_get_changelog_terms_with_single_taxonomy() {
		$terms = get_changelog_terms( 'changelog_category:1,2,3' );
		$this->assertEquals( array( 'changelog_category' => array( 1, 2, 3 ) ), $terms );
	}

	public function test_get_changelog_terms_with_multiple_taxonomies() {

		$terms = get_changelog_terms( array( 'categories:1,2,3', 'tags:4,5,6' ) );

		$this->assertEquals(
			array(
				'categories' => array( 1, 2, 3 ),
				'tags'       => array( 4, 5, 6 ),
			),
			$terms
		);
	}


	public function test_get_changelog_terms_with_invalid_taxonomy() {
		$this->expectOutputString( 'Invalid taxonomy name: invalid_taxonomy' . PHP_EOL );

		$terms = get_changelog_terms( array( 'invalid_taxonomy:1,2,3', 'changelog_category:4,5,6' ) );

		$this->assertEquals(
			array(
				'changelog_category' => array( 4, 5, 6 ),
			),
			$terms
		);
	}


	public function test_get_pr_ids_from_message() {
		$test_cases = array(
			'Merge pull request (#1234) from test-project/test-branch' => array( '1234' ),
			'* chore: Update dependency by @user in https://github.com/Automattic/vip-cli/pull/1234' => array( '1234' ),
			'* chore: Update dependency by @user in https://github.com/Automattic/vip-cli/pull/1235' => array( '1235' ),
			'Multiple PRs: (#456) and https://github.com/org/repo/pull/789' => array( '456', '789' ),
			'Duplicate PRs: (#1234) and (#1234)' => array( '1234' ),
			'* chore: Update dependency by @user in https://github.com/Automattic/vip-cli/pull/1235 * chore: Update dependency by @user in https://github.com/Automattic/vip-cli/pull/1236' => array( '1235', '1236' ),
		);

		foreach ( $test_cases as $message => $expected_pr_ids ) {
			$pr_ids = get_pr_ids_from_message( $message );
			$this->assertEquals( $expected_pr_ids, $pr_ids, "Failed for message: {$message}" );
		}
	}
}
